/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  enum Gcp: String {
    /**
     The container within GCP where the AppHub application is defined.
      // Examples
      attributes[.gcpApphubApplicationContainer] = "projects/my-container-project"
     - Requires: Value type should be `String`
    */
    case gcpApphubApplicationContainer = "gcp.apphub.application.container"

    /**
     The name of the application as configured in AppHub.
      // Examples
      attributes[.gcpApphubApplicationId] = "my-application"
     - Requires: Value type should be `String`
    */
    case gcpApphubApplicationId = "gcp.apphub.application.id"

    /**
     The GCP zone or region where the application is defined.
      // Examples
      attributes[.gcpApphubApplicationLocation] = "us-central1"
     - Requires: Value type should be `String`
    */
    case gcpApphubApplicationLocation = "gcp.apphub.application.location"

    /**
     Criticality of a service indicates its importance to the business.
     - Note: [See AppHub type enum](https://cloud.google.com/app-hub/docs/reference/rest/v1/Attributes#type)
     - Requires: Value should be one of [`/output/Attributes/Gcp_attributes.swift.GcpApphubServiceCriticalityTypeValues`](x-source-tag://otelGcpApphubServiceCriticalityTypeValues) (of type `String`)
    */
    case gcpApphubServiceCriticalityType = "gcp.apphub.service.criticality_type"

    /**
     Environment of a service is the stage of a software lifecycle.
     - Note: [See AppHub environment type](https://cloud.google.com/app-hub/docs/reference/rest/v1/Attributes#type_1)
     - Requires: Value should be one of [`/output/Attributes/Gcp_attributes.swift.GcpApphubServiceEnvironmentTypeValues`](x-source-tag://otelGcpApphubServiceEnvironmentTypeValues) (of type `String`)
    */
    case gcpApphubServiceEnvironmentType = "gcp.apphub.service.environment_type"

    /**
     The name of the service as configured in AppHub.
      // Examples
      attributes[.gcpApphubServiceId] = "my-service"
     - Requires: Value type should be `String`
    */
    case gcpApphubServiceId = "gcp.apphub.service.id"

    /**
     Criticality of a workload indicates its importance to the business.
     - Note: [See AppHub type enum](https://cloud.google.com/app-hub/docs/reference/rest/v1/Attributes#type)
     - Requires: Value should be one of [`/output/Attributes/Gcp_attributes.swift.GcpApphubWorkloadCriticalityTypeValues`](x-source-tag://otelGcpApphubWorkloadCriticalityTypeValues) (of type `String`)
    */
    case gcpApphubWorkloadCriticalityType = "gcp.apphub.workload.criticality_type"

    /**
     Environment of a workload is the stage of a software lifecycle.
     - Note: [See AppHub environment type](https://cloud.google.com/app-hub/docs/reference/rest/v1/Attributes#type_1)
     - Requires: Value should be one of [`/output/Attributes/Gcp_attributes.swift.GcpApphubWorkloadEnvironmentTypeValues`](x-source-tag://otelGcpApphubWorkloadEnvironmentTypeValues) (of type `String`)
    */
    case gcpApphubWorkloadEnvironmentType = "gcp.apphub.workload.environment_type"

    /**
     The name of the workload as configured in AppHub.
      // Examples
      attributes[.gcpApphubWorkloadId] = "my-workload"
     - Requires: Value type should be `String`
    */
    case gcpApphubWorkloadId = "gcp.apphub.workload.id"

    /**
     Identifies the Google Cloud service for which the official client library is intended.
      // Examples
      attributes[.gcpClientService] = "appengine"
      attributes[.gcpClientService] = "run"
      attributes[.gcpClientService] = "firestore"
      attributes[.gcpClientService] = "alloydb"
      attributes[.gcpClientService] = "spanner"
     - Note: Intended to be a stable identifier for Google Cloud client libraries that is uniform across implementation languages. The value should be derived from the canonical service domain for the service; for example, 'foo.googleapis.com' should result in a value of 'foo'.
     - Requires: Value type should be `String`
    */
    case gcpClientService = "gcp.client.service"

    /**
     The name of the Cloud Run [execution](https://cloud.google.com/run/docs/managing/job-executions) being run for the Job, as set by the [`CLOUD_RUN_EXECUTION`](https://cloud.google.com/run/docs/container-contract#jobs-env-vars) environment variable.
      // Examples
      attributes[.gcpCloudRunJobExecution] = "job-name-xxxx"
      attributes[.gcpCloudRunJobExecution] = "sample-job-mdw84"
     - Requires: Value type should be `String`
    */
    case gcpCloudRunJobExecution = "gcp.cloud_run.job.execution"

    /**
     The index for a task within an execution as provided by the [`CLOUD_RUN_TASK_INDEX`](https://cloud.google.com/run/docs/container-contract#jobs-env-vars) environment variable.
      // Examples
      attributes[.gcpCloudRunJobTaskIndex] = 0
      attributes[.gcpCloudRunJobTaskIndex] = 1
     - Requires: Value type should be `Int`
    */
    case gcpCloudRunJobTaskIndex = "gcp.cloud_run.job.task_index"

    /**
     The hostname of a GCE instance. This is the full value of the default or [custom hostname](https://cloud.google.com/compute/docs/instances/custom-hostname-vm).
      // Examples
      attributes[.gcpGceInstanceHostname] = "my-host1234.example.com"
      attributes[.gcpGceInstanceHostname] = "sample-vm.us-west1-b.c.my-project.internal"
     - Requires: Value type should be `String`
    */
    case gcpGceInstanceHostname = "gcp.gce.instance.hostname"

    /**
     The instance name of a GCE instance. This is the value provided by `host.name`, the visible name of the instance in the Cloud Console UI, and the prefix for the default hostname of the instance as defined by the [default internal DNS name](https://cloud.google.com/compute/docs/internal-dns#instance-fully-qualified-domain-names).
      // Examples
      attributes[.gcpGceInstanceName] = "instance-1"
      attributes[.gcpGceInstanceName] = "my-vm-name"
     - Requires: Value type should be `String`
    */
    case gcpGceInstanceName = "gcp.gce.instance.name"


    /** 
      Criticality of a service indicates its importance to the business.
    */
    /// - Tag: otelGcpApphubServiceCriticalityTypeValues
    public struct GcpApphubServiceCriticalityTypeValues: CustomStringConvertible {
      /**
      Mission critical service.
      */
      public static let missionCritical = GcpApphubServiceCriticalityTypeValues("MISSION_CRITICAL") 
      /**
      High impact.
      */
      public static let high = GcpApphubServiceCriticalityTypeValues("HIGH") 
      /**
      Medium impact.
      */
      public static let medium = GcpApphubServiceCriticalityTypeValues("MEDIUM") 
      /**
      Low impact.
      */
      public static let low = GcpApphubServiceCriticalityTypeValues("LOW") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }

    /** 
      Environment of a service is the stage of a software lifecycle.
    */
    /// - Tag: otelGcpApphubServiceEnvironmentTypeValues
    public struct GcpApphubServiceEnvironmentTypeValues: CustomStringConvertible {
      /**
      Production environment.
      */
      public static let production = GcpApphubServiceEnvironmentTypeValues("PRODUCTION") 
      /**
      Staging environment.
      */
      public static let staging = GcpApphubServiceEnvironmentTypeValues("STAGING") 
      /**
      Test environment.
      */
      public static let test = GcpApphubServiceEnvironmentTypeValues("TEST") 
      /**
      Development environment.
      */
      public static let development = GcpApphubServiceEnvironmentTypeValues("DEVELOPMENT") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }

    /** 
      Criticality of a workload indicates its importance to the business.
    */
    /// - Tag: otelGcpApphubWorkloadCriticalityTypeValues
    public struct GcpApphubWorkloadCriticalityTypeValues: CustomStringConvertible {
      /**
      Mission critical service.
      */
      public static let missionCritical = GcpApphubWorkloadCriticalityTypeValues("MISSION_CRITICAL") 
      /**
      High impact.
      */
      public static let high = GcpApphubWorkloadCriticalityTypeValues("HIGH") 
      /**
      Medium impact.
      */
      public static let medium = GcpApphubWorkloadCriticalityTypeValues("MEDIUM") 
      /**
      Low impact.
      */
      public static let low = GcpApphubWorkloadCriticalityTypeValues("LOW") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }

    /** 
      Environment of a workload is the stage of a software lifecycle.
    */
    /// - Tag: otelGcpApphubWorkloadEnvironmentTypeValues
    public struct GcpApphubWorkloadEnvironmentTypeValues: CustomStringConvertible {
      /**
      Production environment.
      */
      public static let production = GcpApphubWorkloadEnvironmentTypeValues("PRODUCTION") 
      /**
      Staging environment.
      */
      public static let staging = GcpApphubWorkloadEnvironmentTypeValues("STAGING") 
      /**
      Test environment.
      */
      public static let test = GcpApphubWorkloadEnvironmentTypeValues("TEST") 
      /**
      Development environment.
      */
      public static let development = GcpApphubWorkloadEnvironmentTypeValues("DEVELOPMENT") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }
  }
}