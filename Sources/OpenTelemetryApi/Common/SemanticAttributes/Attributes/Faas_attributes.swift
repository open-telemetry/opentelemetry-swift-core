/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  enum Faas: String {
    /**
     A boolean that is true if the serverless function is executed for the first time (aka cold-start).
     - Requires: Value type should be `Bool`
    */
    case faasColdstart = "faas.coldstart"

    /**
     A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).
      // Examples
  
   attributes[.faasCron] = "0/5 * * * ? *"
     - Requires: Value type should be `String`
    */
    case faasCron = "faas.cron"

    /**
     The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.
      // Examples
      attributes[.faasDocumentCollection] = "myBucketName"
      attributes[.faasDocumentCollection] = "myDbName"
     - Requires: Value type should be `String`
    */
    case faasDocumentCollection = "faas.document.collection"

    /**
     The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.
      // Examples
      attributes[.faasDocumentName] = "myFile.txt"
      attributes[.faasDocumentName] = "myTableName"
     - Requires: Value type should be `String`
    */
    case faasDocumentName = "faas.document.name"

    /**
     Describes the type of the operation that was performed on the data.
     - Requires: Value should be one of [`/output/Attributes/Faas_attributes.swift.FaasDocumentOperationValues`](x-source-tag://otelFaasDocumentOperationValues) (of type `String`)
    */
    case faasDocumentOperation = "faas.document.operation"

    /**
     A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).
      // Examples
  
   attributes[.faasDocumentTime] = "2020-01-23T13:47:06Z"
     - Requires: Value type should be `String`
    */
    case faasDocumentTime = "faas.document.time"

    /**
     The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.
      // Examples
      attributes[.faasInstance] = "2021/06/28/[$LATEST]2f399eb14537447da05ab2a2e39309de"
     - Note: - **AWS Lambda:** Use the (full) log stream name.
     - Requires: Value type should be `String`
    */
    case faasInstance = "faas.instance"

    /**
     The invocation ID of the current function invocation.
      // Examples
  
   attributes[.faasInvocationId] = "af9d5aa4-a685-4c5f-a22b-444f80b3cc28"
     - Requires: Value type should be `String`
    */
    case faasInvocationId = "faas.invocation_id"

    /**
     The name of the invoked function.
      // Examples
  
   attributes[.faasInvokedName] = "my-function"
     - Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.
     - Requires: Value type should be `String`
    */
    case faasInvokedName = "faas.invoked_name"

    /**
     The cloud provider of the invoked function.
     - Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.
     - Requires: Value should be one of [`/output/Attributes/Faas_attributes.swift.FaasInvokedProviderValues`](x-source-tag://otelFaasInvokedProviderValues) (of type `String`)
    */
    case faasInvokedProvider = "faas.invoked_provider"

    /**
     The cloud region of the invoked function.
      // Examples
  
   attributes[.faasInvokedRegion] = "eu-central-1"
     - Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.
     - Requires: Value type should be `String`
    */
    case faasInvokedRegion = "faas.invoked_region"

    /**
     The amount of memory available to the serverless function converted to Bytes.
      // Examples
  
   attributes[.faasMaxMemory] = 134217728
     - Note: It's recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information (which must be multiplied by 1,048,576).
     - Requires: Value type should be `Int`
    */
    case faasMaxMemory = "faas.max_memory"

    /**
     The name of the single function that this runtime instance executes.
      // Examples
      attributes[.faasName] = "my-function"
      attributes[.faasName] = "myazurefunctionapp/some-function-name"
     - Note: This is the name of the function as configured/deployed on the FaaS
     platform and is usually different from the name of the callback
     function (which may be stored in the
     [`code.namespace`/`code.function.name`](/docs/general/attributes.md#source-code-attributes)
     span attributes).

     For some cloud providers, the above definition is ambiguous. The following
     definition of function name MUST be used for this attribute
     (and consequently the span name) for the listed cloud providers/products:

     - **Azure:**  The full name `<FUNCAPP>/<FUNC>`, i.e., function app name
       followed by a forward slash followed by the function name (this form
       can also be seen in the resource JSON for the function).
       This means that a span attribute MUST be used, as an Azure function
       app can host multiple functions that would usually share
       a TracerProvider (see also the `cloud.resource_id` attribute).
     - Requires: Value type should be `String`
    */
    case faasName = "faas.name"

    /**
     A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).
      // Examples
  
   attributes[.faasTime] = "2020-01-23T13:47:06Z"
     - Requires: Value type should be `String`
    */
    case faasTime = "faas.time"

    /**
     Type of the trigger which caused this function invocation.
     - Requires: Value should be one of [`/output/Attributes/Faas_attributes.swift.FaasTriggerValues`](x-source-tag://otelFaasTriggerValues) (of type `String`)
    */
    case faasTrigger = "faas.trigger"

    /**
     The immutable version of the function being executed.
      // Examples
      attributes[.faasVersion] = "26"
      attributes[.faasVersion] = "pinkfroid-00002"
     - Note: Depending on the cloud provider and platform, use:

     - **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)
       (an integer represented as a decimal string).
     - **Google Cloud Run (Services):** The [revision](https://cloud.google.com/run/docs/managing/revisions)
       (i.e., the function name plus the revision suffix).
     - **Google Cloud Functions:** The value of the
       [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).
     - **Azure Functions:** Not applicable. Do not set this attribute.
     - Requires: Value type should be `String`
    */
    case faasVersion = "faas.version"


    /** 
      Describes the type of the operation that was performed on the data.
    */
    /// - Tag: otelFaasDocumentOperationValues
    public struct FaasDocumentOperationValues: CustomStringConvertible {
      /**
      When a new object is created.
      */
      public static let insert = FaasDocumentOperationValues("insert") 
      /**
      When an object is modified.
      */
      public static let edit = FaasDocumentOperationValues("edit") 
      /**
      When an object is deleted.
      */
      public static let delete = FaasDocumentOperationValues("delete") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }

    /** 
      The cloud provider of the invoked function.
    */
    /// - Tag: otelFaasInvokedProviderValues
    public struct FaasInvokedProviderValues: CustomStringConvertible {
      /**
      Alibaba Cloud
      */
      public static let alibabaCloud = FaasInvokedProviderValues("alibaba_cloud") 
      /**
      Amazon Web Services
      */
      public static let aws = FaasInvokedProviderValues("aws") 
      /**
      Microsoft Azure
      */
      public static let azure = FaasInvokedProviderValues("azure") 
      /**
      Google Cloud Platform
      */
      public static let gcp = FaasInvokedProviderValues("gcp") 
      /**
      Tencent Cloud
      */
      public static let tencentCloud = FaasInvokedProviderValues("tencent_cloud") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }

    /** 
      Type of the trigger which caused this function invocation.
    */
    /// - Tag: otelFaasTriggerValues
    public struct FaasTriggerValues: CustomStringConvertible {
      /**
      A response to some data source operation such as a database or filesystem read/write
      */
      public static let datasource = FaasTriggerValues("datasource") 
      /**
      To provide an answer to an inbound HTTP request
      */
      public static let http = FaasTriggerValues("http") 
      /**
      A function is set to be executed when messages are sent to a messaging system
      */
      public static let pubsub = FaasTriggerValues("pubsub") 
      /**
      A function is scheduled to be executed regularly
      */
      public static let timer = FaasTriggerValues("timer") 
      /**
      If none of the others apply
      */
      public static let other = FaasTriggerValues("other") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }
  }
}