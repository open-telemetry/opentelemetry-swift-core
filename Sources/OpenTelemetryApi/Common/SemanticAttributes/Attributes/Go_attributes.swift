/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  public enum Go: String {

    /**
     The type of memory.

      - Examples:
      ```
      attributes[SemanticConventions.Go.memoryType.rawValue] = .other
      attributes[SemanticConventions.Go.memoryType.rawValue] = .stack
      ```

     - Requires: Value should be one of ``MemoryTypeValues`` (of type `String`)
    */
    case memoryType = "go.memory.type"

    /** 
      The type of memory.
    */
    public struct MemoryTypeValues: CustomStringConvertible {
      
      /// Memory allocated from the heap that is reserved for stack space, whether or not it is currently in-use.
      public static let stack = MemoryTypeValues("stack") 
      
      /// Memory used by the Go runtime, excluding other categories of memory usage described in this enumeration.
      public static let other = MemoryTypeValues("other") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }
  }
}