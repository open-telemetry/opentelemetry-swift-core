/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  public enum Source: String {

    /**
     Source address - domain name if available without reverse DNS lookup; otherwise, IP address or Unix domain socket name.

      - Examples:
      ```
      attributes[SemanticConventions.Source.address.rawValue] = "source.example.com"
      attributes[SemanticConventions.Source.address.rawValue] = "10.1.2.80"
      attributes[SemanticConventions.Source.address.rawValue] = "/tmp/my.sock"
      ```

     - Note: When observed from the destination side, and when communicating through an intermediary, `source.address` SHOULD represent the source address behind any intermediaries, for example proxies, if it's available.

     - Requires: Value type should be `String`
    */
    case address = "source.address"

    /**
     Source port number

      - Examples:
      ```
      attributes[SemanticConventions.Source.port.rawValue] = 3389
      attributes[SemanticConventions.Source.port.rawValue] = 2888
      ```

     - Requires: Value type should be `Int`
    */
    case port = "source.port"
  }
}