/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  enum Opentracing: String {
    /**
     Parent-child Reference type
     - Note: The causal relationship between a child Span and a parent Span.
     - Requires: Value should be one of [`/output/Attributes/Opentracing_attributes.swift.OpentracingRefTypeValues`](x-source-tag://otelOpentracingRefTypeValues) (of type `String`)
    */
    case opentracingRefType = "opentracing.ref_type"


    /** 
      Parent-child Reference type
    */
    /// - Tag: otelOpentracingRefTypeValues
    public struct OpentracingRefTypeValues: CustomStringConvertible {
      /**
      The parent Span depends on the child Span in some capacity
      */
      public static let childOf = OpentracingRefTypeValues("child_of") 
      /**
      The parent Span doesn't depend in any way on the result of the child Span
      */
      public static let followsFrom = OpentracingRefTypeValues("follows_from") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }
  }
}