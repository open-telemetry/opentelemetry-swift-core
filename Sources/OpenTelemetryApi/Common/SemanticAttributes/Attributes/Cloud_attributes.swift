/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  enum Cloud: String {
    /**
     The cloud account ID the resource is assigned to.
      // Examples
      attributes[.cloudAccountId] = "111111111111"
      attributes[.cloudAccountId] = "opentelemetry"
     - Requires: Value type should be `String`
    */
    case cloudAccountId = "cloud.account.id"

    /**
     Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.
      // Examples
      attributes[.cloudAvailabilityZone] = "us-east-1c"
     - Note: Availability zones are called "zones" on Alibaba Cloud and Google Cloud.
     - Requires: Value type should be `String`
    */
    case cloudAvailabilityZone = "cloud.availability_zone"

    /**
     The cloud platform in use.
     - Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.
     - Requires: Value should be one of [`/output/Attributes/Cloud_attributes.swift.CloudPlatformValues`](x-source-tag://otelCloudPlatformValues) (of type `String`)
    */
    case cloudPlatform = "cloud.platform"

    /**
     Name of the cloud provider.
     - Requires: Value should be one of [`/output/Attributes/Cloud_attributes.swift.CloudProviderValues`](x-source-tag://otelCloudProviderValues) (of type `String`)
    */
    case cloudProvider = "cloud.provider"

    /**
     The geographical region within a cloud provider. When associated with a resource, this attribute specifies the region where the resource operates. When calling services or APIs deployed on a cloud, this attribute identifies the region where the called destination is deployed.
      // Examples
      attributes[.cloudRegion] = "us-central1"
      attributes[.cloudRegion] = "us-east-1"
     - Note: Refer to your provider's docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/global-infrastructure/geographies/), [Google Cloud regions](https://cloud.google.com/about/locations), or [Tencent Cloud regions](https://www.tencentcloud.com/document/product/213/6091).
     - Requires: Value type should be `String`
    */
    case cloudRegion = "cloud.region"

    /**
     Cloud provider-specific native identifier of the monitored cloud resource (e.g. an [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) on AWS, a [fully qualified resource ID](https://learn.microsoft.com/rest/api/resources/resources/get-by-id) on Azure, a [full resource name](https://google.aip.dev/122#full-resource-names) on GCP)
      // Examples
      attributes[.cloudResourceId] = "arn:aws:lambda:REGION:ACCOUNT_ID:function:my-function"
      attributes[.cloudResourceId] = "//run.googleapis.com/projects/PROJECT_ID/locations/LOCATION_ID/services/SERVICE_ID"
      attributes[.cloudResourceId] = "/subscriptions/<SUBSCRIPTION_GUID>/resourceGroups/<RG>/providers/Microsoft.Web/sites/<FUNCAPP>/functions/<FUNC>"
     - Note: On some cloud providers, it may not be possible to determine the full ID at startup,
     so it may be necessary to set `cloud.resource_id` as a span attribute instead.

     The exact value to use for `cloud.resource_id` depends on the cloud provider.
     The following well-known definitions MUST be used if you set this attribute and they apply:

     - **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).
       Take care not to use the "invoked ARN" directly but replace any
       [alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html)
       with the resolved function version, as the same runtime instance may be invocable with
       multiple different aliases.
     - **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)
     - **Azure:** The [Fully Qualified Resource ID](https://learn.microsoft.com/rest/api/resources/resources/get-by-id) of the invoked function,
       *not* the function app, having the form
       `/subscriptions/<SUBSCRIPTION_GUID>/resourceGroups/<RG>/providers/Microsoft.Web/sites/<FUNCAPP>/functions/<FUNC>`.
       This means that a span attribute MUST be used, as an Azure function app can host multiple functions that would usually share
       a TracerProvider.
     - Requires: Value type should be `String`
    */
    case cloudResourceId = "cloud.resource_id"


    /** 
      The cloud platform in use.
    */
    /// - Tag: otelCloudPlatformValues
    public struct CloudPlatformValues: CustomStringConvertible {
      /**
      Alibaba Cloud Elastic Compute Service
      */
      public static let alibabaCloudEcs = CloudPlatformValues("alibaba_cloud_ecs") 
      /**
      Alibaba Cloud Function Compute
      */
      public static let alibabaCloudFc = CloudPlatformValues("alibaba_cloud_fc") 
      /**
      Red Hat OpenShift on Alibaba Cloud
      */
      public static let alibabaCloudOpenshift = CloudPlatformValues("alibaba_cloud_openshift") 
      /**
      AWS Elastic Compute Cloud
      */
      public static let awsEc2 = CloudPlatformValues("aws_ec2") 
      /**
      AWS Elastic Container Service
      */
      public static let awsEcs = CloudPlatformValues("aws_ecs") 
      /**
      AWS Elastic Kubernetes Service
      */
      public static let awsEks = CloudPlatformValues("aws_eks") 
      /**
      AWS Lambda
      */
      public static let awsLambda = CloudPlatformValues("aws_lambda") 
      /**
      AWS Elastic Beanstalk
      */
      public static let awsElasticBeanstalk = CloudPlatformValues("aws_elastic_beanstalk") 
      /**
      AWS App Runner
      */
      public static let awsAppRunner = CloudPlatformValues("aws_app_runner") 
      /**
      Red Hat OpenShift on AWS (ROSA)
      */
      public static let awsOpenshift = CloudPlatformValues("aws_openshift") 
      /**
      Azure Virtual Machines
      */
      public static let azureVm = CloudPlatformValues("azure.vm") 
      /**
      Azure Container Apps
      */
      public static let azureContainerApps = CloudPlatformValues("azure.container_apps") 
      /**
      Azure Container Instances
      */
      public static let azureContainerInstances = CloudPlatformValues("azure.container_instances") 
      /**
      Azure Kubernetes Service
      */
      public static let azureAks = CloudPlatformValues("azure.aks") 
      /**
      Azure Functions
      */
      public static let azureFunctions = CloudPlatformValues("azure.functions") 
      /**
      Azure App Service
      */
      public static let azureAppService = CloudPlatformValues("azure.app_service") 
      /**
      Azure Red Hat OpenShift
      */
      public static let azureOpenshift = CloudPlatformValues("azure.openshift") 
      /**
      Google Bare Metal Solution (BMS)
      */
      public static let gcpBareMetalSolution = CloudPlatformValues("gcp_bare_metal_solution") 
      /**
      Google Cloud Compute Engine (GCE)
      */
      public static let gcpComputeEngine = CloudPlatformValues("gcp_compute_engine") 
      /**
      Google Cloud Run
      */
      public static let gcpCloudRun = CloudPlatformValues("gcp_cloud_run") 
      /**
      Google Cloud Kubernetes Engine (GKE)
      */
      public static let gcpKubernetesEngine = CloudPlatformValues("gcp_kubernetes_engine") 
      /**
      Google Cloud Functions (GCF)
      */
      public static let gcpCloudFunctions = CloudPlatformValues("gcp_cloud_functions") 
      /**
      Google Cloud App Engine (GAE)
      */
      public static let gcpAppEngine = CloudPlatformValues("gcp_app_engine") 
      /**
      Red Hat OpenShift on Google Cloud
      */
      public static let gcpOpenshift = CloudPlatformValues("gcp_openshift") 
      /**
      Red Hat OpenShift on IBM Cloud
      */
      public static let ibmCloudOpenshift = CloudPlatformValues("ibm_cloud_openshift") 
      /**
      Compute on Oracle Cloud Infrastructure (OCI)
      */
      public static let oracleCloudCompute = CloudPlatformValues("oracle_cloud_compute") 
      /**
      Kubernetes Engine (OKE) on Oracle Cloud Infrastructure (OCI)
      */
      public static let oracleCloudOke = CloudPlatformValues("oracle_cloud_oke") 
      /**
      Tencent Cloud Cloud Virtual Machine (CVM)
      */
      public static let tencentCloudCvm = CloudPlatformValues("tencent_cloud_cvm") 
      /**
      Tencent Cloud Elastic Kubernetes Service (EKS)
      */
      public static let tencentCloudEks = CloudPlatformValues("tencent_cloud_eks") 
      /**
      Tencent Cloud Serverless Cloud Function (SCF)
      */
      public static let tencentCloudScf = CloudPlatformValues("tencent_cloud_scf") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }

    /** 
      Name of the cloud provider.
    */
    /// - Tag: otelCloudProviderValues
    public struct CloudProviderValues: CustomStringConvertible {
      /**
      Alibaba Cloud
      */
      public static let alibabaCloud = CloudProviderValues("alibaba_cloud") 
      /**
      Amazon Web Services
      */
      public static let aws = CloudProviderValues("aws") 
      /**
      Microsoft Azure
      */
      public static let azure = CloudProviderValues("azure") 
      /**
      Google Cloud Platform
      */
      public static let gcp = CloudProviderValues("gcp") 
      /**
      Heroku Platform as a Service
      */
      public static let heroku = CloudProviderValues("heroku") 
      /**
      IBM Cloud
      */
      public static let ibmCloud = CloudProviderValues("ibm_cloud") 
      /**
      Oracle Cloud Infrastructure (OCI)
      */
      public static let oracleCloud = CloudProviderValues("oracle_cloud") 
      /**
      Tencent Cloud
      */
      public static let tencentCloud = CloudProviderValues("tencent_cloud") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }
  }
}