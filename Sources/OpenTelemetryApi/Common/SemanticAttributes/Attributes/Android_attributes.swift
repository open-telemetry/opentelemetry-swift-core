/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  public enum Android: String {

    /**
     This attribute represents the state of the application.

      - Examples:
      ```
      attributes[SemanticConventions.Android.appState.rawValue] = .created
      ```

     - Note: The Android lifecycle states are defined in [Activity lifecycle callbacks](https://developer.android.com/guide/components/activities/activity-lifecycle#lc), and from which the `OS identifiers` are derived.

     - Requires: Value should be one of ``AppStateValues`` (of type `String`)
    */
    case appState = "android.app.state"

    /**
     Uniquely identifies the framework API revision offered by a version (`os.version`) of the android operating system. More information can be found in the [Android API levels documentation](https://developer.android.com/guide/topics/manifest/uses-sdk-element#ApiLevels).

      - Examples:
      ```
      attributes[SemanticConventions.Android.osApiLevel.rawValue] = "33"
      attributes[SemanticConventions.Android.osApiLevel.rawValue] = "32"
      ```

     - Requires: Value type should be `String`
    */
    case osApiLevel = "android.os.api_level"

    /** 
      This attribute represents the state of the application.
    */
    public struct AppStateValues: CustomStringConvertible {
      
      /// Any time before Activity.onResume() or, if the app has no Activity, Context.startService() has been called in the app for the first time.
      public static let created = AppStateValues("created") 
      
      /// Any time after Activity.onPause() or, if the app has no Activity, Context.stopService() has been called when the app was in the foreground state.
      public static let background = AppStateValues("background") 
      
      /// Any time after Activity.onResume() or, if the app has no Activity, Context.startService() has been called when the app was in either the created or background states.
      public static let foreground = AppStateValues("foreground") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }
  }
}