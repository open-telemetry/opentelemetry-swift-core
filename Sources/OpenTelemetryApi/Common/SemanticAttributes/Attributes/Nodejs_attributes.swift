/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  public enum Nodejs: String {
    /**
     The state of event loop time.
      ```

     - Requires: Value should be one of [`SemanticContentions.Nodejs.EventloopStateValues`](x-source-tag://SemanticConventions.nodejs.EventloopStateValues) (of type `String`)
    */
    case eventloopState = "nodejs.eventloop.state"


    /** 
      The state of event loop time.
    */
    /// - Tag: SemanticConventions.Nodejs.EventloopStateValues
    public struct EventloopStateValues: CustomStringConvertible {
      /**
      Active time.
      */
      public static let active = EventloopStateValues("active") 
      /**
      Idle time.
      */
      public static let idle = EventloopStateValues("idle") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }
  }
}