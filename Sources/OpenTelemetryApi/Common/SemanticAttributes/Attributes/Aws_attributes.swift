/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  public enum Aws: String {

    /**
     The unique identifier of the AWS Bedrock Guardrail. A [guardrail](https://docs.aws.amazon.com/bedrock/latest/userguide/guardrails.html) helps safeguard and prevent unwanted behavior from model responses or user messages.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.bedrockGuardrailId.rawValue] = "sgi5gkybzqak"
      ```

     - Requires: Value type should be `String`
    */
    case bedrockGuardrailId = "aws.bedrock.guardrail.id"

    /**
     The unique identifier of the AWS Bedrock Knowledge base. A [knowledge base](https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base.html) is a bank of information that can be queried by models to generate more relevant responses and augment prompts.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.bedrockKnowledgeBaseId.rawValue] = "XFWUPB9PAW"
      ```

     - Requires: Value type should be `String`
    */
    case bedrockKnowledgeBaseId = "aws.bedrock.knowledge_base.id"

    /**
     The JSON-serialized value of each item in the `AttributeDefinitions` request field.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.dynamodbAttributeDefinitions.rawValue] = ["{ \"AttributeName\": \"string\", \"AttributeType\": \"string\" }"]
      ```

     - Requires: Value type should be `[String]`
    */
    case dynamodbAttributeDefinitions = "aws.dynamodb.attribute_definitions"

    /**
     The value of the `AttributesToGet` request parameter.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.dynamodbAttributesToGet.rawValue] = ["lives", "id"]
      ```

     - Requires: Value type should be `[String]`
    */
    case dynamodbAttributesToGet = "aws.dynamodb.attributes_to_get"

    /**
     The value of the `ConsistentRead` request parameter.

     - Requires: Value type should be `Bool`
    */
    case dynamodbConsistentRead = "aws.dynamodb.consistent_read"

    /**
     The JSON-serialized value of each item in the `ConsumedCapacity` response field.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.dynamodbConsumedCapacity.rawValue] = ["{ \"CapacityUnits\": number, \"GlobalSecondaryIndexes\": { \"string\" : { \"CapacityUnits\": number, \"ReadCapacityUnits\": number, \"WriteCapacityUnits\": number } }, \"LocalSecondaryIndexes\": { \"string\" : { \"CapacityUnits\": number, \"ReadCapacityUnits\": number, \"WriteCapacityUnits\": number } }, \"ReadCapacityUnits\": number, \"Table\": { \"CapacityUnits\": number, \"ReadCapacityUnits\": number, \"WriteCapacityUnits\": number }, \"TableName\": \"string\", \"WriteCapacityUnits\": number }"]
      ```

     - Requires: Value type should be `[String]`
    */
    case dynamodbConsumedCapacity = "aws.dynamodb.consumed_capacity"

    /**
     The value of the `Count` response parameter.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.dynamodbCount.rawValue] = 10
      ```

     - Requires: Value type should be `Int`
    */
    case dynamodbCount = "aws.dynamodb.count"

    /**
     The value of the `ExclusiveStartTableName` request parameter.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.dynamodbExclusiveStartTable.rawValue] = "Users"
      attributes[SemanticConventions.Aws.dynamodbExclusiveStartTable.rawValue] = "CatsTable"
      ```

     - Requires: Value type should be `String`
    */
    case dynamodbExclusiveStartTable = "aws.dynamodb.exclusive_start_table"

    /**
     The JSON-serialized value of each item in the `GlobalSecondaryIndexUpdates` request field.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.dynamodbGlobalSecondaryIndexUpdates.rawValue] = ["{ \"Create\": { \"IndexName\": \"string\", \"KeySchema\": [ { \"AttributeName\": \"string\", \"KeyType\": \"string\" } ], \"Projection\": { \"NonKeyAttributes\": [ \"string\" ], \"ProjectionType\": \"string\" }, \"ProvisionedThroughput\": { \"ReadCapacityUnits\": number, \"WriteCapacityUnits\": number } }"]
      ```

     - Requires: Value type should be `[String]`
    */
    case dynamodbGlobalSecondaryIndexUpdates = "aws.dynamodb.global_secondary_index_updates"

    /**
     The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field

      - Examples:
      ```
      attributes[SemanticConventions.Aws.dynamodbGlobalSecondaryIndexes.rawValue] = ["{ \"IndexName\": \"string\", \"KeySchema\": [ { \"AttributeName\": \"string\", \"KeyType\": \"string\" } ], \"Projection\": { \"NonKeyAttributes\": [ \"string\" ], \"ProjectionType\": \"string\" }, \"ProvisionedThroughput\": { \"ReadCapacityUnits\": number, \"WriteCapacityUnits\": number } }"]
      ```

     - Requires: Value type should be `[String]`
    */
    case dynamodbGlobalSecondaryIndexes = "aws.dynamodb.global_secondary_indexes"

    /**
     The value of the `IndexName` request parameter.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.dynamodbIndexName.rawValue] = "name_to_group"
      ```

     - Requires: Value type should be `String`
    */
    case dynamodbIndexName = "aws.dynamodb.index_name"

    /**
     The JSON-serialized value of the `ItemCollectionMetrics` response field.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.dynamodbItemCollectionMetrics.rawValue] = "{ \"string\" : [ { \"ItemCollectionKey\": { \"string\" : { \"B\": blob, \"BOOL\": boolean, \"BS\": [ blob ], \"L\": [ \"AttributeValue\" ], \"M\": { \"string\" : \"AttributeValue\" }, \"N\": \"string\", \"NS\": [ \"string\" ], \"NULL\": boolean, \"S\": \"string\", \"SS\": [ \"string\" ] } }, \"SizeEstimateRangeGB\": [ number ] } ] }"
      ```

     - Requires: Value type should be `String`
    */
    case dynamodbItemCollectionMetrics = "aws.dynamodb.item_collection_metrics"

    /**
     The value of the `Limit` request parameter.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.dynamodbLimit.rawValue] = 10
      ```

     - Requires: Value type should be `Int`
    */
    case dynamodbLimit = "aws.dynamodb.limit"

    /**
     The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.dynamodbLocalSecondaryIndexes.rawValue] = ["{ \"IndexArn\": \"string\", \"IndexName\": \"string\", \"IndexSizeBytes\": number, \"ItemCount\": number, \"KeySchema\": [ { \"AttributeName\": \"string\", \"KeyType\": \"string\" } ], \"Projection\": { \"NonKeyAttributes\": [ \"string\" ], \"ProjectionType\": \"string\" } }"]
      ```

     - Requires: Value type should be `[String]`
    */
    case dynamodbLocalSecondaryIndexes = "aws.dynamodb.local_secondary_indexes"

    /**
     The value of the `ProjectionExpression` request parameter.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.dynamodbProjection.rawValue] = "Title"
      attributes[SemanticConventions.Aws.dynamodbProjection.rawValue] = "Title, Price, Color"
      attributes[SemanticConventions.Aws.dynamodbProjection.rawValue] = "Title, Description, RelatedItems, ProductReviews"
      ```

     - Requires: Value type should be `String`
    */
    case dynamodbProjection = "aws.dynamodb.projection"

    /**
     The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.dynamodbProvisionedReadCapacity.rawValue] = 1.0
      attributes[SemanticConventions.Aws.dynamodbProvisionedReadCapacity.rawValue] = 2.0
      ```

     - Requires: Value type should be `Double`
    */
    case dynamodbProvisionedReadCapacity = "aws.dynamodb.provisioned_read_capacity"

    /**
     The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.dynamodbProvisionedWriteCapacity.rawValue] = 1.0
      attributes[SemanticConventions.Aws.dynamodbProvisionedWriteCapacity.rawValue] = 2.0
      ```

     - Requires: Value type should be `Double`
    */
    case dynamodbProvisionedWriteCapacity = "aws.dynamodb.provisioned_write_capacity"

    /**
     The value of the `ScanIndexForward` request parameter.

     - Requires: Value type should be `Bool`
    */
    case dynamodbScanForward = "aws.dynamodb.scan_forward"

    /**
     The value of the `ScannedCount` response parameter.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.dynamodbScannedCount.rawValue] = 50
      ```

     - Requires: Value type should be `Int`
    */
    case dynamodbScannedCount = "aws.dynamodb.scanned_count"

    /**
     The value of the `Segment` request parameter.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.dynamodbSegment.rawValue] = 10
      ```

     - Requires: Value type should be `Int`
    */
    case dynamodbSegment = "aws.dynamodb.segment"

    /**
     The value of the `Select` request parameter.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.dynamodbSelect.rawValue] = "ALL_ATTRIBUTES"
      attributes[SemanticConventions.Aws.dynamodbSelect.rawValue] = "COUNT"
      ```

     - Requires: Value type should be `String`
    */
    case dynamodbSelect = "aws.dynamodb.select"

    /**
     The number of items in the `TableNames` response parameter.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.dynamodbTableCount.rawValue] = 20
      ```

     - Requires: Value type should be `Int`
    */
    case dynamodbTableCount = "aws.dynamodb.table_count"

    /**
     The keys in the `RequestItems` object field.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.dynamodbTableNames.rawValue] = ["Users", "Cats"]
      ```

     - Requires: Value type should be `[String]`
    */
    case dynamodbTableNames = "aws.dynamodb.table_names"

    /**
     The value of the `TotalSegments` request parameter.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.dynamodbTotalSegments.rawValue] = 100
      ```

     - Requires: Value type should be `Int`
    */
    case dynamodbTotalSegments = "aws.dynamodb.total_segments"

    /**
     The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).

      - Examples:
      ```
      attributes[SemanticConventions.Aws.ecsClusterArn.rawValue] = "arn:aws:ecs:us-west-2:123456789123:cluster/my-cluster"
      ```

     - Requires: Value type should be `String`
    */
    case ecsClusterArn = "aws.ecs.cluster.arn"

    /**
     The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).

      - Examples:
      ```
      attributes[SemanticConventions.Aws.ecsContainerArn.rawValue] = "arn:aws:ecs:us-west-1:123456789123:container/32624152-9086-4f0e-acae-1a75b14fe4d9"
      ```

     - Requires: Value type should be `String`
    */
    case ecsContainerArn = "aws.ecs.container.arn"

    /**
     The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.

     - Requires: Value should be one of ``EcsLaunchtypeValues`` (of type `String`)
    */
    case ecsLaunchtype = "aws.ecs.launchtype"

    /**
     The ARN of a running [ECS task](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html#ecs-resource-ids).

      - Examples:
      ```
      attributes[SemanticConventions.Aws.ecsTaskArn.rawValue] = "arn:aws:ecs:us-west-1:123456789123:task/10838bed-421f-43ef-870a-f43feacbbb5b"
      attributes[SemanticConventions.Aws.ecsTaskArn.rawValue] = "arn:aws:ecs:us-west-1:123456789123:task/my-cluster/task-id/23ebb8ac-c18f-46c6-8bbe-d55d0e37cfbd"
      ```

     - Requires: Value type should be `String`
    */
    case ecsTaskArn = "aws.ecs.task.arn"

    /**
     The family name of the [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html) used to create the ECS task.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.ecsTaskFamily.rawValue] = "opentelemetry-family"
      ```

     - Requires: Value type should be `String`
    */
    case ecsTaskFamily = "aws.ecs.task.family"

    /**
     The ID of a running ECS task. The ID MUST be extracted from `task.arn`.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.ecsTaskId.rawValue] = "10838bed-421f-43ef-870a-f43feacbbb5b"
      attributes[SemanticConventions.Aws.ecsTaskId.rawValue] = "23ebb8ac-c18f-46c6-8bbe-d55d0e37cfbd"
      ```

     - Requires: Value type should be `String`
    */
    case ecsTaskId = "aws.ecs.task.id"

    /**
     The revision for the task definition used to create the ECS task.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.ecsTaskRevision.rawValue] = "8"
      attributes[SemanticConventions.Aws.ecsTaskRevision.rawValue] = "26"
      ```

     - Requires: Value type should be `String`
    */
    case ecsTaskRevision = "aws.ecs.task.revision"

    /**
     The ARN of an EKS cluster.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.eksClusterArn.rawValue] = "arn:aws:ecs:us-west-2:123456789123:cluster/my-cluster"
      ```

     - Requires: Value type should be `String`
    */
    case eksClusterArn = "aws.eks.cluster.arn"

    /**
     The AWS extended request ID as returned in the response header `x-amz-id-2`.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.extendedRequestId.rawValue] = "wzHcyEWfmOGDIE5QOhTAqFDoDWP3y8IUvpNINCwL9N4TEHbUw0/gZJ+VZTmCNCWR7fezEN3eCiQ="
      ```

     - Requires: Value type should be `String`
    */
    case extendedRequestId = "aws.extended_request_id"

    /**
     The name of the AWS Kinesis [stream](https://docs.aws.amazon.com/streams/latest/dev/introduction.html) the request refers to. Corresponds to the `--stream-name` parameter of the Kinesis [describe-stream](https://docs.aws.amazon.com/cli/latest/reference/kinesis/describe-stream.html) operation.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.kinesisStreamName.rawValue] = "some-stream-name"
      ```

     - Requires: Value type should be `String`
    */
    case kinesisStreamName = "aws.kinesis.stream_name"

    /**
     The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).

      - Examples:
      ```
      attributes[SemanticConventions.Aws.lambdaInvokedArn.rawValue] = "arn:aws:lambda:us-east-1:123456:function:myfunction:myalias"
      ```

     - Note: This may be different from `cloud.resource_id` if an alias is involved.

     - Requires: Value type should be `String`
    */
    case lambdaInvokedArn = "aws.lambda.invoked_arn"

    /**
     The UUID of the [AWS Lambda EvenSource Mapping](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html). An event source is mapped to a lambda function. It's contents are read by Lambda and used to trigger a function. This isn't available in the lambda execution context or the lambda runtime environtment. This is going to be populated by the AWS SDK for each language when that UUID is present. Some of these operations are Create/Delete/Get/List/Update EventSourceMapping.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.lambdaResourceMappingId.rawValue] = "587ad24b-03b9-4413-8202-bbd56b36e5b7"
      ```

     - Requires: Value type should be `String`
    */
    case lambdaResourceMappingId = "aws.lambda.resource_mapping.id"

    /**
     The Amazon Resource Name(s) (ARN) of the AWS log group(s).

      - Examples:
      ```
      attributes[SemanticConventions.Aws.logGroupArns.rawValue] = ["arn:aws:logs:us-west-1:123456789012:log-group:/aws/my/group:*"]
      ```

     - Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).

     - Requires: Value type should be `[String]`
    */
    case logGroupArns = "aws.log.group.arns"

    /**
     The name(s) of the AWS log group(s) an application is writing to.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.logGroupNames.rawValue] = ["/aws/lambda/my-function", "opentelemetry-service"]
      ```

     - Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.

     - Requires: Value type should be `[String]`
    */
    case logGroupNames = "aws.log.group.names"

    /**
     The ARN(s) of the AWS log stream(s).

      - Examples:
      ```
      attributes[SemanticConventions.Aws.logStreamArns.rawValue] = ["arn:aws:logs:us-west-1:123456789012:log-group:/aws/my/group:log-stream:logs/main/10838bed-421f-43ef-870a-f43feacbbb5b"]
      ```

     - Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.

     - Requires: Value type should be `[String]`
    */
    case logStreamArns = "aws.log.stream.arns"

    /**
     The name(s) of the AWS log stream(s) an application is writing to.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.logStreamNames.rawValue] = ["logs/main/10838bed-421f-43ef-870a-f43feacbbb5b"]
      ```

     - Requires: Value type should be `[String]`
    */
    case logStreamNames = "aws.log.stream.names"

    /**
     The AWS request ID as returned in the response headers `x-amzn-requestid`, `x-amzn-request-id` or `x-amz-request-id`.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.requestId.rawValue] = "79b9da39-b7ae-508a-a6bc-864b2829c622"
      attributes[SemanticConventions.Aws.requestId.rawValue] = "C9ER4AJX75574TDJ"
      ```

     - Requires: Value type should be `String`
    */
    case requestId = "aws.request_id"

    /**
     The S3 bucket name the request refers to. Corresponds to the `--bucket` parameter of the [S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/index.html) operations.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.s3Bucket.rawValue] = "some-bucket-name"
      ```

     - Note: The `bucket` attribute is applicable to all S3 operations that reference a bucket, i.e. that require the bucket name as a mandatory parameter.
       This applies to almost all S3 operations except `list-buckets`.

     - Requires: Value type should be `String`
    */
    case s3Bucket = "aws.s3.bucket"

    /**
     The source object (in the form `bucket`/`key`) for the copy operation.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.s3CopySource.rawValue] = "someFile.yml"
      ```

     - Note: The `copy_source` attribute applies to S3 copy operations and corresponds to the `--copy-source` parameter
       of the [copy-object operation within the S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/copy-object.html).
       This applies in particular to the following operations:

       - [copy-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/copy-object.html)
       - [upload-part-copy](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part-copy.html)

     - Requires: Value type should be `String`
    */
    case s3CopySource = "aws.s3.copy_source"

    /**
     The delete request container that specifies the objects to be deleted.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.s3Delete.rawValue] = "Objects=[{Key=string,VersionId=string},{Key=string,VersionId=string}],Quiet=boolean"
      ```

     - Note: The `delete` attribute is only applicable to the [delete-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/delete-object.html) operation.
       The `delete` attribute corresponds to the `--delete` parameter of the
       [delete-objects operation within the S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/delete-objects.html).

     - Requires: Value type should be `String`
    */
    case s3Delete = "aws.s3.delete"

    /**
     The S3 object key the request refers to. Corresponds to the `--key` parameter of the [S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/index.html) operations.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.s3Key.rawValue] = "someFile.yml"
      ```

     - Note: The `key` attribute is applicable to all object-related S3 operations, i.e. that require the object key as a mandatory parameter.
       This applies in particular to the following operations:

       - [copy-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/copy-object.html)
       - [delete-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/delete-object.html)
       - [get-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/get-object.html)
       - [head-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/head-object.html)
       - [put-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/put-object.html)
       - [restore-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/restore-object.html)
       - [select-object-content](https://docs.aws.amazon.com/cli/latest/reference/s3api/select-object-content.html)
       - [abort-multipart-upload](https://docs.aws.amazon.com/cli/latest/reference/s3api/abort-multipart-upload.html)
       - [complete-multipart-upload](https://docs.aws.amazon.com/cli/latest/reference/s3api/complete-multipart-upload.html)
       - [create-multipart-upload](https://docs.aws.amazon.com/cli/latest/reference/s3api/create-multipart-upload.html)
       - [list-parts](https://docs.aws.amazon.com/cli/latest/reference/s3api/list-parts.html)
       - [upload-part](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part.html)
       - [upload-part-copy](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part-copy.html)

     - Requires: Value type should be `String`
    */
    case s3Key = "aws.s3.key"

    /**
     The part number of the part being uploaded in a multipart-upload operation. This is a positive integer between 1 and 10,000.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.s3PartNumber.rawValue] = 3456
      ```

     - Note: The `part_number` attribute is only applicable to the [upload-part](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part.html)
       and [upload-part-copy](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part-copy.html) operations.
       The `part_number` attribute corresponds to the `--part-number` parameter of the
       [upload-part operation within the S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part.html).

     - Requires: Value type should be `Int`
    */
    case s3PartNumber = "aws.s3.part_number"

    /**
     Upload ID that identifies the multipart upload.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.s3UploadId.rawValue] = "dfRtDYWFbkRONycy.Yxwh66Yjlx.cph0gtNBtJ"
      ```

     - Note: The `upload_id` attribute applies to S3 multipart-upload operations and corresponds to the `--upload-id` parameter
       of the [S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/index.html) multipart operations.
       This applies in particular to the following operations:

       - [abort-multipart-upload](https://docs.aws.amazon.com/cli/latest/reference/s3api/abort-multipart-upload.html)
       - [complete-multipart-upload](https://docs.aws.amazon.com/cli/latest/reference/s3api/complete-multipart-upload.html)
       - [list-parts](https://docs.aws.amazon.com/cli/latest/reference/s3api/list-parts.html)
       - [upload-part](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part.html)
       - [upload-part-copy](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part-copy.html)

     - Requires: Value type should be `String`
    */
    case s3UploadId = "aws.s3.upload_id"

    /**
     The ARN of the Secret stored in the Secrets Mangger

      - Examples:
      ```
      attributes[SemanticConventions.Aws.secretsmanagerSecretArn.rawValue] = "arn:aws:secretsmanager:us-east-1:123456789012:secret:SecretName-6RandomCharacters"
      ```

     - Requires: Value type should be `String`
    */
    case secretsmanagerSecretArn = "aws.secretsmanager.secret.arn"

    /**
     The ARN of the AWS SNS Topic. An Amazon SNS [topic](https://docs.aws.amazon.com/sns/latest/dg/sns-create-topic.html) is a logical access point that acts as a communication channel.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.snsTopicArn.rawValue] = "arn:aws:sns:us-east-1:123456789012:mystack-mytopic-NZJ5JSMVGFIE"
      ```

     - Requires: Value type should be `String`
    */
    case snsTopicArn = "aws.sns.topic.arn"

    /**
     The URL of the AWS SQS Queue. It's a unique identifier for a queue in Amazon Simple Queue Service (SQS) and is used to access the queue and perform actions on it.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.sqsQueueUrl.rawValue] = "https://sqs.us-east-1.amazonaws.com/123456789012/MyQueue"
      ```

     - Requires: Value type should be `String`
    */
    case sqsQueueUrl = "aws.sqs.queue.url"

    /**
     The ARN of the AWS Step Functions Activity.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.stepFunctionsActivityArn.rawValue] = "arn:aws:states:us-east-1:123456789012:activity:get-greeting"
      ```

     - Requires: Value type should be `String`
    */
    case stepFunctionsActivityArn = "aws.step_functions.activity.arn"

    /**
     The ARN of the AWS Step Functions State Machine.

      - Examples:
      ```
      attributes[SemanticConventions.Aws.stepFunctionsStateMachineArn.rawValue] = "arn:aws:states:us-east-1:123456789012:stateMachine:myStateMachine:1"
      ```

     - Requires: Value type should be `String`
    */
    case stepFunctionsStateMachineArn = "aws.step_functions.state_machine.arn"

    /** 
      The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.
    */
    public struct EcsLaunchtypeValues: CustomStringConvertible {
      
      /// Amazon EC2
      public static let ec2 = EcsLaunchtypeValues("ec2") 
      
      /// Amazon Fargate
      public static let fargate = EcsLaunchtypeValues("fargate") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }
  }
}