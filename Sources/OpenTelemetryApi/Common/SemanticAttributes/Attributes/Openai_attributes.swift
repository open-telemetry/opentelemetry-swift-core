/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  public enum Openai: String {

    /**
     The service tier requested. May be a specific tier, default, or auto.

      - Examples:
      ```
      attributes[SemanticConventions.Openai.requestServiceTier.rawValue] = .auto
      attributes[SemanticConventions.Openai.requestServiceTier.rawValue] = .default
      ```

     - Requires: Value should be one of ``RequestServiceTierValues`` (of type `String`)
    */
    case requestServiceTier = "openai.request.service_tier"

    /**
     The service tier used for the response.

      - Examples:
      ```
      attributes[SemanticConventions.Openai.responseServiceTier.rawValue] = "scale"
      attributes[SemanticConventions.Openai.responseServiceTier.rawValue] = "default"
      ```

     - Requires: Value type should be `String`
    */
    case responseServiceTier = "openai.response.service_tier"

    /**
     A fingerprint to track any eventual change in the Generative AI environment.

      - Examples:
      ```
      attributes[SemanticConventions.Openai.responseSystemFingerprint.rawValue] = "fp_44709d6fcb"
      ```

     - Requires: Value type should be `String`
    */
    case responseSystemFingerprint = "openai.response.system_fingerprint"

    /** 
      The service tier requested. May be a specific tier, default, or auto.
    */
    public struct RequestServiceTierValues: CustomStringConvertible {
      
      /// The system will utilize scale tier credits until they are exhausted.
      public static let auto = RequestServiceTierValues("auto") 
      
      /// The system will utilize the default scale tier.
      public static let _default = RequestServiceTierValues("default") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }
  }
}