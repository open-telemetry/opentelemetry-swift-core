/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  enum Destination: String {
    /**
     Destination address - domain name if available without reverse DNS lookup; otherwise, IP address or Unix domain socket name.
      // Examples
      attributes[.destinationAddress] = "destination.example.com"
      attributes[.destinationAddress] = "10.1.2.80"
      attributes[.destinationAddress] = "/tmp/my.sock"
     - Note: When observed from the source side, and when communicating through an intermediary, `destination.address` SHOULD represent the destination address behind any intermediaries, for example proxies, if it's available.
     - Requires: Value type should be `String`
    */
    case address = "destination.address"

    /**
     Destination port number
      // Examples
      attributes[.destinationPort] = 3389
      attributes[.destinationPort] = 2888
     - Requires: Value type should be `Int`
    */
    case port = "destination.port"

  }
}