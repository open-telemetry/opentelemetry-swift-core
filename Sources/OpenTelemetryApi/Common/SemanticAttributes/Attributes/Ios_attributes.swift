/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  enum Ios: String {
    /**
     This attribute represents the state of the application.
     - Note: The iOS lifecycle states are defined in the [UIApplicationDelegate documentation](https://developer.apple.com/documentation/uikit/uiapplicationdelegate), and from which the `OS terminology` column values are derived.
     - Requires: Value should be one of [`/output/Attributes/Ios_attributes.swift.IosAppStateValues`](x-source-tag://otelIosAppStateValues) (of type `String`)
    */
    case iosAppState = "ios.app.state"


    /** 
      This attribute represents the state of the application.
    */
    /// - Tag: otelIosAppStateValues
    public struct IosAppStateValues: CustomStringConvertible {
      /**
      The app has become `active`. Associated with UIKit notification `applicationDidBecomeActive`.
      */
      public static let active = IosAppStateValues("active") 
      /**
      The app is now `inactive`. Associated with UIKit notification `applicationWillResignActive`.
      */
      public static let inactive = IosAppStateValues("inactive") 
      /**
      The app is now in the background. This value is associated with UIKit notification `applicationDidEnterBackground`.
      */
      public static let background = IosAppStateValues("background") 
      /**
      The app is now in the foreground. This value is associated with UIKit notification `applicationWillEnterForeground`.
      */
      public static let foreground = IosAppStateValues("foreground") 
      /**
      The app is about to terminate. Associated with UIKit notification `applicationWillTerminate`.
      */
      public static let terminate = IosAppStateValues("terminate") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }
  }
}