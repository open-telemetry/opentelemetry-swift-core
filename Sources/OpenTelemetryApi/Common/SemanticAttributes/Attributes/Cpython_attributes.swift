/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  enum Cpython: String {
    /**
     Value of the garbage collector collection generation.
      // Examples
      attributes[.cpythonGcGeneration] = 0
      attributes[.cpythonGcGeneration] = 1
      attributes[.cpythonGcGeneration] = 2
     - Requires: Value should be one of [`/output/Attributes/Cpython_attributes.swift.CpythonGcGenerationValues`](x-source-tag://otelCpythonGcGenerationValues) (of type `Int`)
    */
    case cpythonGcGeneration = "cpython.gc.generation"


    /** 
      Value of the garbage collector collection generation.
    */
    /// - Tag: otelCpythonGcGenerationValues
    public struct CpythonGcGenerationValues: CustomStringConvertible {
      /**
      Generation 0
      */
      public static let generation0 = CpythonGcGenerationValues(0) 
      /**
      Generation 1
      */
      public static let generation1 = CpythonGcGenerationValues(1) 
      /**
      Generation 2
      */
      public static let generation2 = CpythonGcGenerationValues(2) 

      internal let value: Int 

      public init(_ customValue: Int) {
        self.value = customValue
      }

      public var description: String { 
        return "\(value)" 
      }
    }
  }
}