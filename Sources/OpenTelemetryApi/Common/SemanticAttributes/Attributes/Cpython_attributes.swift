/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  public enum Cpython: String {

    /**
     Value of the garbage collector collection generation.

      - Examples:
      ```
      attributes[SemanticConventions.Cpython.gcGeneration.rawValue] = .0
      attributes[SemanticConventions.Cpython.gcGeneration.rawValue] = .1
      attributes[SemanticConventions.Cpython.gcGeneration.rawValue] = .2
      ```

     - Requires: Value should be one of ``GcGenerationValues`` (of type `Int`)
    */
    case gcGeneration = "cpython.gc.generation"

    /** 
      Value of the garbage collector collection generation.
    */
    public struct GcGenerationValues: CustomStringConvertible {
      
      /// Generation 0
      public static let generation0 = GcGenerationValues(0) 
      
      /// Generation 1
      public static let generation1 = GcGenerationValues(1) 
      
      /// Generation 2
      public static let generation2 = GcGenerationValues(2) 

      internal let value: Int 

      public init(_ customValue: Int) {
        self.value = customValue
      }

      public var description: String { 
        return "\(value)" 
      }
    }
  }
}