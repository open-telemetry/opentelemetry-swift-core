/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  public enum SecurityRule: String {

    /**
     A categorization value keyword used by the entity using the rule for detection of this event

      - Examples:
      ```
      attributes[SemanticConventions.SecurityRule.category.rawValue] = "Attempted Information Leak"
      ```

     - Requires: Value type should be `String`
    */
    case category = "security_rule.category"

    /**
     The description of the rule generating the event.

      - Examples:
      ```
      attributes[SemanticConventions.SecurityRule.description.rawValue] = "Block requests to public DNS over HTTPS / TLS protocols"
      ```

     - Requires: Value type should be `String`
    */
    case description = "security_rule.description"

    /**
     Name of the license under which the rule used to generate this event is made available.

      - Examples:
      ```
      attributes[SemanticConventions.SecurityRule.license.rawValue] = "Apache 2.0"
      ```

     - Requires: Value type should be `String`
    */
    case license = "security_rule.license"

    /**
     The name of the rule or signature generating the event.

      - Examples:
      ```
      attributes[SemanticConventions.SecurityRule.name.rawValue] = "BLOCK_DNS_over_TLS"
      ```

     - Requires: Value type should be `String`
    */
    case name = "security_rule.name"

    /**
     Reference URL to additional information about the rule used to generate this event.

      - Examples:
      ```
      attributes[SemanticConventions.SecurityRule.reference.rawValue] = "https://en.wikipedia.org/wiki/DNS_over_TLS"
      ```

     - Note: The URL can point to the vendor’s documentation about the rule. If that’s not available, it can also be a link to a more general page describing this type of alert.

     - Requires: Value type should be `String`
    */
    case reference = "security_rule.reference"

    /**
     Name of the ruleset, policy, group, or parent category in which the rule used to generate this event is a member.

      - Examples:
      ```
      attributes[SemanticConventions.SecurityRule.rulesetName.rawValue] = "Standard_Protocol_Filters"
      ```

     - Requires: Value type should be `String`
    */
    case rulesetName = "security_rule.ruleset.name"

    /**
     A rule ID that is unique within the scope of a set or group of agents, observers, or other entities using the rule for detection of this event.

      - Examples:
      ```
      attributes[SemanticConventions.SecurityRule.uuid.rawValue] = "550e8400-e29b-41d4-a716-446655440000"
      attributes[SemanticConventions.SecurityRule.uuid.rawValue] = "1100110011"
      ```

     - Requires: Value type should be `String`
    */
    case uuid = "security_rule.uuid"

    /**
     The version / revision of the rule being used for analysis.

      - Examples:
      ```
      attributes[SemanticConventions.SecurityRule.version.rawValue] = "1.0.0"
      ```

     - Requires: Value type should be `String`
    */
    case version = "security_rule.version"
  }
}