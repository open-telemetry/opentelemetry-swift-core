/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  public enum Dotnet: String {

    /**
     Name of the garbage collector managed heap generation.

      - Examples:
      ```
      attributes[SemanticConventions.Dotnet.gcHeapGeneration.rawValue] = .gen0
      attributes[SemanticConventions.Dotnet.gcHeapGeneration.rawValue] = .gen1
      attributes[SemanticConventions.Dotnet.gcHeapGeneration.rawValue] = .gen2
      ```

     - Requires: Value should be one of ``GcHeapGenerationValues`` (of type `String`)
    */
    case gcHeapGeneration = "dotnet.gc.heap.generation"

    /** 
      Name of the garbage collector managed heap generation.
    */
    public struct GcHeapGenerationValues: CustomStringConvertible {
      
      /// Generation 0
      public static let gen0 = GcHeapGenerationValues("gen0") 
      
      /// Generation 1
      public static let gen1 = GcHeapGenerationValues("gen1") 
      
      /// Generation 2
      public static let gen2 = GcHeapGenerationValues("gen2") 
      
      /// Large Object Heap
      public static let loh = GcHeapGenerationValues("loh") 
      
      /// Pinned Object Heap
      public static let poh = GcHeapGenerationValues("poh") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }
  }
}