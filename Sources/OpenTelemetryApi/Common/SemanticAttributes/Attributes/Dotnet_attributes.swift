/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  enum Dotnet: String {
    /**
     Name of the garbage collector managed heap generation.
      // Examples
      attributes[.dotnetGcHeapGeneration] = gen0
      attributes[.dotnetGcHeapGeneration] = gen1
      attributes[.dotnetGcHeapGeneration] = gen2
     - Requires: Value should be one of [`/output/Attributes/Dotnet_attributes.swift.DotnetGcHeapGenerationValues`](x-source-tag://otelDotnetGcHeapGenerationValues) (of type `String`)
    */
    case dotnetGcHeapGeneration = "dotnet.gc.heap.generation"


    /** 
      Name of the garbage collector managed heap generation.
    */
    /// - Tag: otelDotnetGcHeapGenerationValues
    public struct DotnetGcHeapGenerationValues: CustomStringConvertible {
      /**
      Generation 0
      */
      public static let gen0 = DotnetGcHeapGenerationValues("gen0") 
      /**
      Generation 1
      */
      public static let gen1 = DotnetGcHeapGenerationValues("gen1") 
      /**
      Generation 2
      */
      public static let gen2 = DotnetGcHeapGenerationValues("gen2") 
      /**
      Large Object Heap
      */
      public static let loh = DotnetGcHeapGenerationValues("loh") 
      /**
      Pinned Object Heap
      */
      public static let poh = DotnetGcHeapGenerationValues("poh") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }
  }
}