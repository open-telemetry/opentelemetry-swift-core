/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  enum Geo: String {
    /**
     Two-letter code representing continent’s name.
     - Requires: Value should be one of [`/output/Attributes/Geo_attributes.swift.GeoContinentCodeValues`](x-source-tag://otelGeoContinentCodeValues) (of type `String`)
    */
    case geoContinentCode = "geo.continent.code"

    /**
     Two-letter ISO Country Code ([ISO 3166-1 alpha2](https://wikipedia.org/wiki/ISO_3166-1#Codes)).
      // Examples
      attributes[.geoCountryIsoCode] = "CA"
     - Requires: Value type should be `String`
    */
    case geoCountryIsoCode = "geo.country.iso_code"

    /**
     Locality name. Represents the name of a city, town, village, or similar populated place.
      // Examples
      attributes[.geoLocalityName] = "Montreal"
      attributes[.geoLocalityName] = "Berlin"
     - Requires: Value type should be `String`
    */
    case geoLocalityName = "geo.locality.name"

    /**
     Latitude of the geo location in [WGS84](https://wikipedia.org/wiki/World_Geodetic_System#WGS84).
      // Examples
      attributes[.geoLocationLat] = 45.505918
     - Requires: Value type should be `Double`
    */
    case geoLocationLat = "geo.location.lat"

    /**
     Longitude of the geo location in [WGS84](https://wikipedia.org/wiki/World_Geodetic_System#WGS84).
      // Examples
      attributes[.geoLocationLon] = -73.61483
     - Requires: Value type should be `Double`
    */
    case geoLocationLon = "geo.location.lon"

    /**
     Postal code associated with the location. Values appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.
      // Examples
      attributes[.geoPostalCode] = "94040"
     - Requires: Value type should be `String`
    */
    case geoPostalCode = "geo.postal_code"

    /**
     Region ISO code ([ISO 3166-2](https://wikipedia.org/wiki/ISO_3166-2)).
      // Examples
      attributes[.geoRegionIsoCode] = "CA-QC"
     - Requires: Value type should be `String`
    */
    case geoRegionIsoCode = "geo.region.iso_code"


    /** 
      Two-letter code representing continent’s name.
    */
    /// - Tag: otelGeoContinentCodeValues
    public struct GeoContinentCodeValues: CustomStringConvertible {
      /**
      Africa
      */
      public static let af = GeoContinentCodeValues("AF") 
      /**
      Antarctica
      */
      public static let an = GeoContinentCodeValues("AN") 
      /**
      Asia
      */
      public static let _as = GeoContinentCodeValues("AS") 
      /**
      Europe
      */
      public static let eu = GeoContinentCodeValues("EU") 
      /**
      North America
      */
      public static let na = GeoContinentCodeValues("NA") 
      /**
      Oceania
      */
      public static let oc = GeoContinentCodeValues("OC") 
      /**
      South America
      */
      public static let sa = GeoContinentCodeValues("SA") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }
  }
}