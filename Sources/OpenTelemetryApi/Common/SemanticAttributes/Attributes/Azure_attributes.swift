/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  enum Azure: String {
    /**
     The unique identifier of the client instance.
      // Examples
      attributes[.azureClientId] = "3ba4827d-4422-483f-b59f-85b74211c11d"
      attributes[.azureClientId] = "storage-client-1"
     - Requires: Value type should be `String`
    */
    case azureClientId = "azure.client.id"

    /**
     Cosmos client connection mode.
     - Requires: Value should be one of [`/output/Attributes/Azure_attributes.swift.AzureCosmosdbConnectionModeValues`](x-source-tag://otelAzureCosmosdbConnectionModeValues) (of type `String`)
    */
    case azureCosmosdbConnectionMode = "azure.cosmosdb.connection.mode"

    /**
     Account or request [consistency level](https://learn.microsoft.com/azure/cosmos-db/consistency-levels).
      // Examples
      attributes[.azureCosmosdbConsistencyLevel] = Eventual
      attributes[.azureCosmosdbConsistencyLevel] = ConsistentPrefix
      attributes[.azureCosmosdbConsistencyLevel] = BoundedStaleness
      attributes[.azureCosmosdbConsistencyLevel] = Strong
      attributes[.azureCosmosdbConsistencyLevel] = Session
     - Requires: Value should be one of [`/output/Attributes/Azure_attributes.swift.AzureCosmosdbConsistencyLevelValues`](x-source-tag://otelAzureCosmosdbConsistencyLevelValues) (of type `String`)
    */
    case azureCosmosdbConsistencyLevel = "azure.cosmosdb.consistency.level"

    /**
     List of regions contacted during operation in the order that they were contacted. If there is more than one region listed, it indicates that the operation was performed on multiple regions i.e. cross-regional call.
      // Examples
      attributes[.azureCosmosdbOperationContactedRegions] = ["North Central US", "Australia East", "Australia Southeast"]
     - Note: Region name matches the format of `displayName` in [Azure Location API](https://learn.microsoft.com/rest/api/subscription/subscriptions/list-locations?view=rest-subscription-2021-10-01&tabs=HTTP#location)
     - Requires: Value type should be `[String]`
    */
    case azureCosmosdbOperationContactedRegions = "azure.cosmosdb.operation.contacted_regions"

    /**
     The number of request units consumed by the operation.
      // Examples
      attributes[.azureCosmosdbOperationRequestCharge] = 46.18
      attributes[.azureCosmosdbOperationRequestCharge] = 1.0
     - Requires: Value type should be `Double`
    */
    case azureCosmosdbOperationRequestCharge = "azure.cosmosdb.operation.request_charge"

    /**
     Request payload size in bytes.
     - Requires: Value type should be `Int`
    */
    case azureCosmosdbRequestBodySize = "azure.cosmosdb.request.body.size"

    /**
     Cosmos DB sub status code.
      // Examples
      attributes[.azureCosmosdbResponseSubStatusCode] = 1000
      attributes[.azureCosmosdbResponseSubStatusCode] = 1002
     - Requires: Value type should be `Int`
    */
    case azureCosmosdbResponseSubStatusCode = "azure.cosmosdb.response.sub_status_code"

    /**
     [Azure Resource Provider Namespace](https://learn.microsoft.com/azure/azure-resource-manager/management/azure-services-resource-providers) as recognized by the client.
      // Examples
      attributes[.azureResourceProviderNamespace] = "Microsoft.Storage"
      attributes[.azureResourceProviderNamespace] = "Microsoft.KeyVault"
      attributes[.azureResourceProviderNamespace] = "Microsoft.ServiceBus"
     - Requires: Value type should be `String`
    */
    case azureResourceProviderNamespace = "azure.resource_provider.namespace"

    /**
     The unique identifier of the service request. It's generated by the Azure service and returned with the response.
      // Examples
      attributes[.azureServiceRequestId] = "00000000-0000-0000-0000-000000000000"
     - Requires: Value type should be `String`
    */
    case azureServiceRequestId = "azure.service.request.id"


    /** 
      Cosmos client connection mode.
    */
    /// - Tag: otelAzureCosmosdbConnectionModeValues
    public struct AzureCosmosdbConnectionModeValues: CustomStringConvertible {
      /**
      Gateway (HTTP) connection.
      */
      public static let gateway = AzureCosmosdbConnectionModeValues("gateway") 
      /**
      Direct connection.
      */
      public static let direct = AzureCosmosdbConnectionModeValues("direct") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }

    /** 
      Account or request [consistency level](https://learn.microsoft.com/azure/cosmos-db/consistency-levels).
    */
    /// - Tag: otelAzureCosmosdbConsistencyLevelValues
    public struct AzureCosmosdbConsistencyLevelValues: CustomStringConvertible {
      /**
      Strong
      */
      public static let strong = AzureCosmosdbConsistencyLevelValues("Strong") 
      /**
      Bounded Staleness
      */
      public static let boundedStaleness = AzureCosmosdbConsistencyLevelValues("BoundedStaleness") 
      /**
      Session
      */
      public static let session = AzureCosmosdbConsistencyLevelValues("Session") 
      /**
      Eventual
      */
      public static let eventual = AzureCosmosdbConsistencyLevelValues("Eventual") 
      /**
      Consistent Prefix
      */
      public static let consistentPrefix = AzureCosmosdbConsistencyLevelValues("ConsistentPrefix") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }
  }
}