/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  public enum Azure: String {

    /**
     The unique identifier of the client instance.

      - Examples:
      ```
      attributes[SemanticConventions.Azure.clientId.rawValue] = "3ba4827d-4422-483f-b59f-85b74211c11d"
      attributes[SemanticConventions.Azure.clientId.rawValue] = "storage-client-1"
      ```

     - Requires: Value type should be `String`
    */
    case clientId = "azure.client.id"

    /**
     Cosmos client connection mode.

     - Requires: Value should be one of ``CosmosdbConnectionModeValues`` (of type `String`)
    */
    case cosmosdbConnectionMode = "azure.cosmosdb.connection.mode"

    /**
     Account or request [consistency level](https://learn.microsoft.com/azure/cosmos-db/consistency-levels).

      - Examples:
      ```
      attributes[SemanticConventions.Azure.cosmosdbConsistencyLevel.rawValue] = .Eventual
      attributes[SemanticConventions.Azure.cosmosdbConsistencyLevel.rawValue] = .ConsistentPrefix
      attributes[SemanticConventions.Azure.cosmosdbConsistencyLevel.rawValue] = .BoundedStaleness
      attributes[SemanticConventions.Azure.cosmosdbConsistencyLevel.rawValue] = .Strong
      attributes[SemanticConventions.Azure.cosmosdbConsistencyLevel.rawValue] = .Session
      ```

     - Requires: Value should be one of ``CosmosdbConsistencyLevelValues`` (of type `String`)
    */
    case cosmosdbConsistencyLevel = "azure.cosmosdb.consistency.level"

    /**
     List of regions contacted during operation in the order that they were contacted. If there is more than one region listed, it indicates that the operation was performed on multiple regions i.e. cross-regional call.

      - Examples:
      ```
      attributes[SemanticConventions.Azure.cosmosdbOperationContactedRegions.rawValue] = ["North Central US", "Australia East", "Australia Southeast"]
      ```

     - Note: Region name matches the format of `displayName` in [Azure Location API](https://learn.microsoft.com/rest/api/subscription/subscriptions/list-locations?view=rest-subscription-2021-10-01&tabs=HTTP#location)

     - Requires: Value type should be `[String]`
    */
    case cosmosdbOperationContactedRegions = "azure.cosmosdb.operation.contacted_regions"

    /**
     The number of request units consumed by the operation.

      - Examples:
      ```
      attributes[SemanticConventions.Azure.cosmosdbOperationRequestCharge.rawValue] = 46.18
      attributes[SemanticConventions.Azure.cosmosdbOperationRequestCharge.rawValue] = 1.0
      ```

     - Requires: Value type should be `Double`
    */
    case cosmosdbOperationRequestCharge = "azure.cosmosdb.operation.request_charge"

    /**
     Request payload size in bytes.

     - Requires: Value type should be `Int`
    */
    case cosmosdbRequestBodySize = "azure.cosmosdb.request.body.size"

    /**
     Cosmos DB sub status code.

      - Examples:
      ```
      attributes[SemanticConventions.Azure.cosmosdbResponseSubStatusCode.rawValue] = 1000
      attributes[SemanticConventions.Azure.cosmosdbResponseSubStatusCode.rawValue] = 1002
      ```

     - Requires: Value type should be `Int`
    */
    case cosmosdbResponseSubStatusCode = "azure.cosmosdb.response.sub_status_code"

    /**
     [Azure Resource Provider Namespace](https://learn.microsoft.com/azure/azure-resource-manager/management/azure-services-resource-providers) as recognized by the client.

      - Examples:
      ```
      attributes[SemanticConventions.Azure.resourceProviderNamespace.rawValue] = "Microsoft.Storage"
      attributes[SemanticConventions.Azure.resourceProviderNamespace.rawValue] = "Microsoft.KeyVault"
      attributes[SemanticConventions.Azure.resourceProviderNamespace.rawValue] = "Microsoft.ServiceBus"
      ```

     - Requires: Value type should be `String`
    */
    case resourceProviderNamespace = "azure.resource_provider.namespace"

    /**
     The unique identifier of the service request. It's generated by the Azure service and returned with the response.

      - Examples:
      ```
      attributes[SemanticConventions.Azure.serviceRequestId.rawValue] = "00000000-0000-0000-0000-000000000000"
      ```

     - Requires: Value type should be `String`
    */
    case serviceRequestId = "azure.service.request.id"

    /** 
      Cosmos client connection mode.
    */
    public struct CosmosdbConnectionModeValues: CustomStringConvertible {
      
      /// Gateway (HTTP) connection.
      public static let gateway = CosmosdbConnectionModeValues("gateway") 
      
      /// Direct connection.
      public static let direct = CosmosdbConnectionModeValues("direct") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }

    /** 
      Account or request [consistency level](https://learn.microsoft.com/azure/cosmos-db/consistency-levels).
    */
    public struct CosmosdbConsistencyLevelValues: CustomStringConvertible {
      
      /// Strong
      public static let strong = CosmosdbConsistencyLevelValues("Strong") 
      
      /// Bounded Staleness
      public static let boundedStaleness = CosmosdbConsistencyLevelValues("BoundedStaleness") 
      
      /// Session
      public static let session = CosmosdbConsistencyLevelValues("Session") 
      
      /// Eventual
      public static let eventual = CosmosdbConsistencyLevelValues("Eventual") 
      
      /// Consistent Prefix
      public static let consistentPrefix = CosmosdbConsistencyLevelValues("ConsistentPrefix") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }
  }
}