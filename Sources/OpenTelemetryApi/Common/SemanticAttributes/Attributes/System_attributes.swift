/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  enum System: String {
    /**
     Deprecated, use `cpu.logical_number` instead.
      // Examples
      attributes[.systemCpuLogicalNumber] = 1
     - Requires: Value type should be `Int`
    */
    case systemCpuLogicalNumber = "system.cpu.logical_number"

    /**
     The device identifier
      // Examples
      attributes[.systemDevice] = "(identifier)"
     - Requires: Value type should be `String`
    */
    case systemDevice = "system.device"

    /**
     The filesystem mode
      // Examples
      attributes[.systemFilesystemMode] = "rw, ro"
     - Requires: Value type should be `String`
    */
    case systemFilesystemMode = "system.filesystem.mode"

    /**
     The filesystem mount path
      // Examples
      attributes[.systemFilesystemMountpoint] = "/mnt/data"
     - Requires: Value type should be `String`
    */
    case systemFilesystemMountpoint = "system.filesystem.mountpoint"

    /**
     The filesystem state
      // Examples
      attributes[.systemFilesystemState] = used
     - Requires: Value should be one of [`/output/Attributes/System_attributes.swift.SystemFilesystemStateValues`](x-source-tag://otelSystemFilesystemStateValues) (of type `String`)
    */
    case systemFilesystemState = "system.filesystem.state"

    /**
     The filesystem type
      // Examples
      attributes[.systemFilesystemType] = ext4
     - Requires: Value should be one of [`/output/Attributes/System_attributes.swift.SystemFilesystemTypeValues`](x-source-tag://otelSystemFilesystemTypeValues) (of type `String`)
    */
    case systemFilesystemType = "system.filesystem.type"

    /**
     The memory state
      // Examples
      attributes[.systemMemoryState] = free
      attributes[.systemMemoryState] = cached
     - Requires: Value should be one of [`/output/Attributes/System_attributes.swift.SystemMemoryStateValues`](x-source-tag://otelSystemMemoryStateValues) (of type `String`)
    */
    case systemMemoryState = "system.memory.state"

    /**
     The paging access direction
      // Examples
      attributes[.systemPagingDirection] = in
     - Requires: Value should be one of [`/output/Attributes/System_attributes.swift.SystemPagingDirectionValues`](x-source-tag://otelSystemPagingDirectionValues) (of type `String`)
    */
    case systemPagingDirection = "system.paging.direction"

    /**
     The memory paging state
      // Examples
      attributes[.systemPagingState] = free
     - Requires: Value should be one of [`/output/Attributes/System_attributes.swift.SystemPagingStateValues`](x-source-tag://otelSystemPagingStateValues) (of type `String`)
    */
    case systemPagingState = "system.paging.state"

    /**
     The memory paging type
      // Examples
      attributes[.systemPagingType] = minor
     - Requires: Value should be one of [`/output/Attributes/System_attributes.swift.SystemPagingTypeValues`](x-source-tag://otelSystemPagingTypeValues) (of type `String`)
    */
    case systemPagingType = "system.paging.type"

    /**
     The process state, e.g., [Linux Process State Codes](https://man7.org/linux/man-pages/man1/ps.1.html#PROCESS_STATE_CODES)
      // Examples
      attributes[.systemProcessStatus] = running
     - Requires: Value should be one of [`/output/Attributes/System_attributes.swift.SystemProcessStatusValues`](x-source-tag://otelSystemProcessStatusValues) (of type `String`)
    */
    case systemProcessStatus = "system.process.status"


    /** 
      The filesystem state
    */
    /// - Tag: otelSystemFilesystemStateValues
    public struct SystemFilesystemStateValues: CustomStringConvertible {
      public static let used = SystemFilesystemStateValues("used") 
      public static let free = SystemFilesystemStateValues("free") 
      public static let reserved = SystemFilesystemStateValues("reserved") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }

    /** 
      The filesystem type
    */
    /// - Tag: otelSystemFilesystemTypeValues
    public struct SystemFilesystemTypeValues: CustomStringConvertible {
      public static let fat32 = SystemFilesystemTypeValues("fat32") 
      public static let exfat = SystemFilesystemTypeValues("exfat") 
      public static let ntfs = SystemFilesystemTypeValues("ntfs") 
      public static let refs = SystemFilesystemTypeValues("refs") 
      public static let hfsplus = SystemFilesystemTypeValues("hfsplus") 
      public static let ext4 = SystemFilesystemTypeValues("ext4") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }

    /** 
      The memory state
    */
    /// - Tag: otelSystemMemoryStateValues
    public struct SystemMemoryStateValues: CustomStringConvertible {
      /**
      Actual used virtual memory in bytes.
      */
      public static let used = SystemMemoryStateValues("used") 
      public static let free = SystemMemoryStateValues("free") 
      public static let buffers = SystemMemoryStateValues("buffers") 
      public static let cached = SystemMemoryStateValues("cached") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }

    /** 
      The paging access direction
    */
    /// - Tag: otelSystemPagingDirectionValues
    public struct SystemPagingDirectionValues: CustomStringConvertible {
      public static let _in = SystemPagingDirectionValues("in") 
      public static let out = SystemPagingDirectionValues("out") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }

    /** 
      The memory paging state
    */
    /// - Tag: otelSystemPagingStateValues
    public struct SystemPagingStateValues: CustomStringConvertible {
      public static let used = SystemPagingStateValues("used") 
      public static let free = SystemPagingStateValues("free") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }

    /** 
      The memory paging type
    */
    /// - Tag: otelSystemPagingTypeValues
    public struct SystemPagingTypeValues: CustomStringConvertible {
      public static let major = SystemPagingTypeValues("major") 
      public static let minor = SystemPagingTypeValues("minor") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }

    /** 
      The process state, e.g., [Linux Process State Codes](https://man7.org/linux/man-pages/man1/ps.1.html#PROCESS_STATE_CODES)
    */
    /// - Tag: otelSystemProcessStatusValues
    public struct SystemProcessStatusValues: CustomStringConvertible {
      public static let running = SystemProcessStatusValues("running") 
      public static let sleeping = SystemProcessStatusValues("sleeping") 
      public static let stopped = SystemProcessStatusValues("stopped") 
      public static let defunct = SystemProcessStatusValues("defunct") 

      internal let value: String 

      public init(_ customValue: String) {
        self.value = customValue
      }

      public var description: String { 
        return value
      }
    }
  }
}