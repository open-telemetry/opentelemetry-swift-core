/*
 * Copyright The OpenTelemetry Authors 
 * SPDX-License-Identifier: Apache-2.0
 */

// DO **NOT** EDIT. This file is automatically generated.

import Foundation 

extension SemanticConventions {
  public enum Container: String {

    /**
     The command used to run the container (i.e. the command name).

      - Examples:
      ```
      attributes[SemanticConventions.Container.command.rawValue] = "otelcontribcol"
      ```

     - Note: If using embedded credentials or sensitive data, it is recommended to remove them to prevent potential leakage.

     - Requires: Value type should be `String`
    */
    case command = "container.command"

    /**
     All the command arguments (including the command/executable itself) run by the container.

      - Examples:
      ```
      attributes[SemanticConventions.Container.commandArgs.rawValue] = ["otelcontribcol", "--config", "config.yaml"]
      ```

     - Requires: Value type should be `[String]`
    */
    case commandArgs = "container.command_args"

    /**
     The full command run by the container as a single string representing the full command.

      - Examples:
      ```
      attributes[SemanticConventions.Container.commandLine.rawValue] = "otelcontribcol --config config.yaml"
      ```

     - Requires: Value type should be `String`
    */
    case commandLine = "container.command_line"

    /**
     The name of the CSI ([Container Storage Interface](https://github.com/container-storage-interface/spec)) plugin used by the volume.

      - Examples:
      ```
      attributes[SemanticConventions.Container.csiPluginName.rawValue] = "pd.csi.storage.gke.io"
      ```

     - Note: This can sometimes be referred to as a "driver" in CSI implementations. This should represent the `name` field of the GetPluginInfo RPC.

     - Requires: Value type should be `String`
    */
    case csiPluginName = "container.csi.plugin.name"

    /**
     The unique volume ID returned by the CSI ([Container Storage Interface](https://github.com/container-storage-interface/spec)) plugin.

      - Examples:
      ```
      attributes[SemanticConventions.Container.csiVolumeId.rawValue] = "projects/my-gcp-project/zones/my-gcp-zone/disks/my-gcp-disk"
      ```

     - Note: This can sometimes be referred to as a "volume handle" in CSI implementations. This should represent the `Volume.volume_id` field in CSI spec.

     - Requires: Value type should be `String`
    */
    case csiVolumeId = "container.csi.volume.id"

    /**
     Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/containers/run/#container-identification). The UUID might be abbreviated.

      - Examples:
      ```
      attributes[SemanticConventions.Container.id.rawValue] = "a3bf90e006b2"
      ```

     - Requires: Value type should be `String`
    */
    case id = "container.id"

    /**
     Runtime specific image identifier. Usually a hash algorithm followed by a UUID.

      - Examples:
      ```
      attributes[SemanticConventions.Container.imageId.rawValue] = "sha256:19c92d0a00d1b66d897bceaa7319bee0dd38a10a851c60bcec9474aa3f01e50f"
      ```

     - Note: Docker defines a sha256 of the image id; `container.image.id` corresponds to the `Image` field from the Docker container inspect [API](https://docs.docker.com/engine/api/v1.43/#tag/Container/operation/ContainerInspect) endpoint.
       K8s defines a link to the container registry repository with digest `"imageID": "registry.azurecr.io /namespace/service/dockerfile@sha256:bdeabd40c3a8a492eaf9e8e44d0ebbb84bac7ee25ac0cf8a7159d25f62555625"`.
       The ID is assigned by the container runtime and can vary in different environments. Consider using `oci.manifest.digest` if it is important to identify the same image in different environments/runtimes.

     - Requires: Value type should be `String`
    */
    case imageId = "container.image.id"

    /**
     Name of the image the container was built on.

      - Examples:
      ```
      attributes[SemanticConventions.Container.imageName.rawValue] = "gcr.io/opentelemetry/operator"
      ```

     - Requires: Value type should be `String`
    */
    case imageName = "container.image.name"

    /**
     Repo digests of the container image as provided by the container runtime.

      - Examples:
      ```
      attributes[SemanticConventions.Container.imageRepoDigests.rawValue] = ["example@sha256:afcc7f1ac1b49db317a7196c902e61c6c3c4607d63599ee1a82d702d249a0ccb", "internal.registry.example.com:5000/example@sha256:b69959407d21e8a062e0416bf13405bb2b71ed7a84dde4158ebafacfa06f5578"]
      ```

     - Note: [Docker](https://docs.docker.com/engine/api/v1.43/#tag/Image/operation/ImageInspect) and [CRI](https://github.com/kubernetes/cri-api/blob/c75ef5b473bbe2d0a4fc92f82235efd665ea8e9f/pkg/apis/runtime/v1/api.proto#L1237-L1238) report those under the `RepoDigests` field.

     - Requires: Value type should be `[String]`
    */
    case imageRepoDigests = "container.image.repo_digests"

    /**
     Container image tags. An example can be found in [Docker Image Inspect](https://docs.docker.com/engine/api/v1.43/#tag/Image/operation/ImageInspect). Should be only the `<tag>` section of the full name for example from `registry.example.com/my-org/my-image:<tag>`.

      - Examples:
      ```
      attributes[SemanticConventions.Container.imageTags.rawValue] = ["v1.27.1", "3.5.7-0"]
      ```

     - Requires: Value type should be `[String]`
    */
    case imageTags = "container.image.tags"

    /**
     Container labels, `<key>` being the label name, the value being the label value.

      - Examples:
      ```
      attributes[SemanticConventions.Container.label.rawValue] = "nginx"
      ```

     - Note: For example, a docker container label `app` with value `nginx` SHOULD be recorded as the `container.label.app` attribute with value `"nginx"`.

     - Requires: Value type should be `template[string]`
    */
    case label = "container.label"

    /**
     Container name used by container runtime.

      - Examples:
      ```
      attributes[SemanticConventions.Container.name.rawValue] = "opentelemetry-autoconf"
      ```

     - Requires: Value type should be `String`
    */
    case name = "container.name"

    /**
     A description about the runtime which could include, for example details about the CRI/API version being used or other customisations.

      - Examples:
      ```
      attributes[SemanticConventions.Container.runtimeDescription.rawValue] = "docker://19.3.1 - CRI: 1.22.0"
      ```

     - Requires: Value type should be `String`
    */
    case runtimeDescription = "container.runtime.description"

    /**
     The container runtime managing this container.

      - Examples:
      ```
      attributes[SemanticConventions.Container.runtimeName.rawValue] = "docker"
      attributes[SemanticConventions.Container.runtimeName.rawValue] = "containerd"
      attributes[SemanticConventions.Container.runtimeName.rawValue] = "rkt"
      ```

     - Requires: Value type should be `String`
    */
    case runtimeName = "container.runtime.name"

    /**
     The version of the runtime of this process, as returned by the runtime without modification.

      - Examples:
      ```
      attributes[SemanticConventions.Container.runtimeVersion.rawValue] = "1.0.0"
      ```

     - Requires: Value type should be `String`
    */
    case runtimeVersion = "container.runtime.version"
  }
}